/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("Vue.mixin({\r\n  methods: {\r\n    logout: function logout() {\r\n      document.getElementById('logout-form').submit();\r\n    }\r\n  }\r\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL2xvZ291dC5qcz9hOWFmIl0sInNvdXJjZXNDb250ZW50IjpbIlZ1ZS5taXhpbih7XHJcbiAgbWV0aG9kczoge1xyXG4gICAgbG9nb3V0KCkge1xyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9nb3V0LWZvcm0nKS5zdWJtaXQoKTtcclxuICAgIH1cclxuICB9XHJcbn0pO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyByZXNvdXJjZXMvYXNzZXRzL2pzL2xvZ291dC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

eval("Vue.http.interceptors.push(function (request, next) {\r\n    request.headers.set('Authorization', 'Bearer ' + document.getElementById('Authorization').value)\r\n\r\n    next()\r\n\r\n})\r\n\r\nVue.mixin({\r\n\r\n  data: function data$1() {\r\n\r\n    return {\r\n\r\n      // init\r\n      user:           null,\r\n      active:         'post',\r\n      action:         '',\r\n      skip:           0,\r\n      take:           5,\r\n      full:           false,\r\n      disabled:       true,\r\n      loadmore:       false,\r\n\r\n      // view data handlers\r\n      posts:          [],\r\n      polls:          [],\r\n      suggestions:    [],\r\n\r\n      // post modification handler\r\n      post: {\r\n        id:           null,\r\n        title:        '',\r\n        desc:         '',\r\n        errors: {\r\n\r\n          title: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          desc: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          }\r\n\r\n        }\r\n\r\n      },\r\n\r\n      // poll modification handler\r\n      poll: {\r\n        id:           null,\r\n        title:        '',\r\n        desc:         '',\r\n        start:        '',\r\n        end:          '',\r\n        type:         '',\r\n        // status:       '',\r\n        answer:       '',\r\n        answers:      [],\r\n        errors: {\r\n\r\n          title: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          desc: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          start: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          end: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          type: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          // status: {\r\n\r\n          //   dirty:    false,\r\n          //   status:   false,\r\n          //   text:     ''\r\n\r\n          // },\r\n\r\n          answer: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          // answers: {\r\n\r\n          //   dirty:    false,\r\n          //   status:   false,\r\n          //   text:     ''\r\n\r\n          // }\r\n\r\n        }\r\n\r\n      },\r\n\r\n      // suggestion modification handler\r\n      suggestion: {\r\n        id:           null,\r\n        title:        '',\r\n        direct:       '',\r\n        message:      '',\r\n        errors: {\r\n\r\n          title: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          direct: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          },\r\n\r\n          message: {\r\n\r\n            dirty:    false,\r\n            status:   false,\r\n            text:     ''\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }, // data\r\n\r\n  created: function created() {\n    var this$1 = this;\n\r\n\r\n    this.$http\r\n      .get(window.location.origin + '/api/user')\r\n\r\n      .then(function (response) {\r\n        this$1.user = response.data\r\n\r\n      })\r\n\r\n      .catch(function (response) {\r\n        console.error(response.error)\r\n\r\n      })\r\n\r\n    $('[data-toggle=\"tooltip\"]').tooltip()\r\n\r\n  }, // created\r\n\r\n  mounted: function mounted() {\r\n\r\n    this.getAct()\r\n\r\n  }, // mounted\r\n\r\n  watch: {\r\n\r\n    'post.title': function () {\r\n\r\n      this.post.errors.title.dirty              = true\r\n\r\n      if (this.post.title == '') {\r\n        this.post.errors.title.status           = false\r\n        this.post.errors.title.text             = 'Title cannot be empty.'\r\n      } else {\r\n        this.post.errors.title.status           = true\r\n        this.post.errors.title.text             = ''\r\n      }\r\n\r\n    }, // post.title\r\n\r\n    'post.desc': function () {\r\n\r\n      this.post.errors.desc.dirty               = true\r\n\r\n      if (this.post.desc == '') {\r\n        this.post.errors.desc.status            = false\r\n        this.post.errors.desc.text              = 'Description cannot be empty.'\r\n      } else {\r\n        this.post.errors.desc.status            = true\r\n        this.post.errors.desc.text              = ''\r\n      }\r\n\r\n    }, // post.desc\r\n\r\n    'poll.title': function () {\r\n\r\n      this.poll.errors.title.dirty              = true\r\n\r\n      if (this.poll.title == '') {\r\n        this.poll.errors.title.status           = false\r\n        this.poll.errors.title.text             = 'Title cannot be empty.'\r\n\r\n      } else {\r\n        this.poll.errors.title.status           = true\r\n        this.poll.errors.title.text             = ''\r\n\r\n      }\r\n\r\n    }, // poll.title\r\n\r\n    'poll.desc': function () {\r\n\r\n      this.poll.errors.desc.dirty               = true\r\n\r\n      if (this.poll.desc == '') {\r\n        this.poll.errors.desc.status            = false\r\n        this.poll.errors.desc.text              = 'Description cannot be empty.'\r\n\r\n      } else {\r\n        this.poll.errors.desc.status            = true\r\n        this.poll.errors.desc.text              = ''\r\n\r\n      }\r\n\r\n    }, // poll.desc\r\n\r\n    'poll.start': function () {\r\n\r\n      this.poll.errors.start.dirty              = true\r\n\r\n      var start                                 = moment(this.poll.start, 'MMM D, YYYY h:mm a').format('YYYY-MM-DD HH:mm:ss')\r\n\r\n      if (this.poll.end == '') var end          = ''\r\n      else                     var end          = moment(this.poll.end, 'MMM D, YYYY h:mm a').format('YYYY-MM-DD HH:mm:ss')\r\n\r\n      if (this.poll.start == '') {\r\n        this.poll.errors.start.status           = false\r\n        this.poll.errors.start.text             = 'Start date cannot be empty.'\r\n      } else if (moment().isAfter(start)) {\r\n        this.poll.errors.start.status           = false\r\n        this.poll.errors.start.text             = 'Start date must set after current date.'\r\n      } else if (moment(start).isAfter(end)) {\r\n        this.poll.errors.start.status           = false\r\n        this.poll.errors.start.text             = 'Start date must set before end date.'\r\n      } else {\r\n        this.poll.errors.start.status           = true\r\n        this.poll.errors.start.text             = ''\r\n      }\r\n\r\n    }, // poll.start\r\n\r\n    'poll.end': function () {\r\n\r\n      this.poll.errors.end.dirty                = true\r\n\r\n      if (this.poll.start == '')  var start     = ''\r\n      else                        var start     = moment(this.poll.start, 'MMM D, YYYY h:mm a').format('YYYY-MM-DD HH:mm:ss')\r\n\r\n      var end                                   = moment(this.poll.end, 'MMM D, YYYY h:mm a').format('YYYY-MM-DD HH:mm:ss')\r\n\r\n      if (this.poll.end == '') {\r\n        this.poll.errors.end.status             = false\r\n        this.poll.errors.end.text               = 'End date cannot be empty.'\r\n      } else if (moment().isAfter(end)) {\r\n        this.poll.errors.end.status             = false\r\n        this.poll.errors.end.text               = 'End date must set after start date.'\r\n      } else if (moment(end).isBefore(start)) {\r\n        this.poll.errors.end.status             = false\r\n        this.poll.errors.end.text               = 'End date must set after start date.'\r\n      } else {\r\n        this.poll.errors.end.status             = true\r\n        this.poll.errors.end.text               = ''\r\n      }\r\n\r\n    }, // poll.end\r\n\r\n    'poll.type': function () {\r\n\r\n      this.poll.errors.type.dirty               = true\r\n\r\n      if (this.poll.type == '') {\r\n        this.poll.errors.type.status            = false\r\n        this.poll.errors.type.text              = 'Select a type.'\r\n\r\n      } else {\r\n        this.poll.errors.type.status            = true\r\n        this.poll.errors.type.text              = ''\r\n\r\n      }\r\n\r\n    }, // poll.type\r\n\r\n    'poll.answer': function () {\r\n\r\n      this.poll.errors.answer.dirty             = true\r\n\r\n      if (this.poll.answers.length == 0) {\r\n        this.poll.errors.answer.status          = false\r\n        this.poll.errors.answer.text            = 'Add answers.'\r\n\r\n      } else if (this.poll.answers.length < 2) {\r\n        this.poll.errors.answer.status          = false\r\n        this.poll.errors.answer.text            = 'Must have atleast two answers.'\r\n\r\n      } else {\r\n        this.poll.errors.answer.status          = true\r\n        this.poll.errors.answer.text            = ''\r\n\r\n      }\r\n\r\n    }, // poll.answer\r\n\r\n    'suggestion.title': function () {\r\n\r\n      this.suggestion.errors.title.dirty        = true\r\n\r\n      if (this.suggestion.title == '') {\r\n        this.suggestion.errors.title.status     = false\r\n        this.suggestion.errors.title.text       = 'Title cannot be empty.'\r\n\r\n      } else {\r\n        this.suggestion.errors.title.status     = true\r\n        this.suggestion.errors.title.text       = ''\r\n\r\n      }\r\n\r\n    }, // suggestion.title\r\n\r\n    'suggestion.direct': function () {\r\n\r\n      this.suggestion.errors.direct.dirty       = true\r\n\r\n      if (this.suggestion.direct == '') {\r\n        this.suggestion.errors.direct.status    = false\r\n        this.suggestion.errors.direct.text      = 'Direct cannot be empty.'\r\n\r\n      } else {\r\n        this.suggestion.errors.direct.status    = true\r\n        this.suggestion.errors.direct.text      = ''\r\n\r\n      }\r\n\r\n    }, // suggestion.direct\r\n\r\n    'suggestion.message': function () {\r\n\r\n      this.suggestion.errors.message.dirty      = true\r\n\r\n      if (this.suggestion.message == '') {\r\n        this.suggestion.errors.message.status   = false\r\n        this.suggestion.errors.message.text     = 'Message cannot be empty.'\r\n\r\n      } else {\r\n        this.suggestion.errors.message.status   = true\r\n        this.suggestion.errors.message.text     = ''\r\n\r\n      }\r\n\r\n    } // suggestion.message\r\n\r\n  }, // watch\r\n\r\n  computed: {\r\n\r\n    'pollstatus': function () {\r\n\r\n      if (this.poll.start == '')  var start   = ''\r\n      else                        var start   = moment(this.poll.start, 'MMM D, YYYY h:mm a').format('YYYY-MM-DD HH:mm:ss')\r\n      if (this.poll.end == '')    var end     = ''\r\n      else                        var end     = moment(this.poll.end, 'MMM D, YYYY h:mm a').format('YYYY-MM-DD HH:mm:ss')\r\n\r\n      if      (moment().isAfter(start)  && moment().isBefore(end))        return 'active'\r\n      else if (moment().isBefore(start) && moment(start).isBefore(end))   return 'pending'\r\n      else if (moment().isAfter(end)    && moment(end).isAfter(start))    return 'expired'\r\n      else                                                                return 'invalid date range'\r\n\r\n    }, // pollstatus\r\n\r\n    btnPostDisabled: function btnPostDisabled() {\r\n\r\n      return (\r\n        this.post.errors.title.status &&\r\n        this.post.errors.desc.status\r\n      ) ? false : true;\r\n\r\n    }, // btnPostDisabled\r\n\r\n    btnPollDisabled: function btnPollDisabled() {\r\n\r\n      return (\r\n        this.poll.errors.title.status &&\r\n        this.poll.errors.desc.status &&\r\n        this.poll.errors.start.status &&\r\n        this.poll.errors.end.status &&\r\n        this.poll.errors.type.status &&\r\n        this.poll.errors.answer.status\r\n      ) ? false : true;\r\n\r\n    }, // btnPollDisabled\r\n\r\n    btnSuggestionDisabled: function btnSuggestionDisabled() {\r\n\r\n      return (\r\n        this.suggestion.errors.title.status &&\r\n        this.suggestion.errors.direct.status &&\r\n        this.suggestion.errors.message.status\r\n      ) ? false : true;\r\n\r\n    } // btnSuggestionDisabled\r\n\r\n  }, // computed\r\n\r\n  methods: {\r\n\r\n    enableFieldset: function enableFieldset() {\r\n\r\n      this.disabled = false\r\n\r\n    }, // enableFieldset\r\n\r\n    disableFieldset: function disableFieldset() {\r\n\r\n      this.disabled = true\r\n\r\n    }, // disableFieldset\r\n\r\n    focus: function focus(target) {\r\n\r\n      $(target).focus()\r\n\r\n    }, // focus\r\n\r\n    showModal: function showModal(selector, action, id, data) {\n      if ( action === void 0 ) action = '';\n      if ( id === void 0 ) id = null;\n      if ( data === void 0 ) data = {};\n\r\n\r\n      var vm = this\r\n\r\n      vm.action = action\r\n      vm.enableFieldset()\r\n\r\n      if (selector == '#post-modal') {\r\n        vm.post.id       =  id\r\n        vm.post.title    =  data.title    == undefined ? '' : data.title\r\n        vm.post.desc     =  data.desc     == undefined ? '' : data.desc\r\n\r\n      } else if (selector == '#poll-modal') {\r\n        vm.poll.id       =  id\r\n        vm.poll.title    =  data.title    == undefined ? '' : data.title\r\n        vm.poll.desc     =  data.desc     == undefined ? '' : data.desc\r\n        vm.poll.type     =  data.type     == undefined ? '' : data.type\r\n        // vm.poll.status   =  data.status   == undefined ? '' : data.status\r\n        vm.poll.answer   =  data.answer   == undefined ? '' : data.answer\r\n        vm.poll.answers  =  data.answers  == undefined ? [] : data.answers\r\n\r\n        // init datetime picker\r\n        if (data.start == undefined && data.end == undefined) {\r\n          $('#poll-start').datetimepicker({\r\n            format: 'MMM D, YYYY h:mm a'\r\n          })\r\n\r\n          $('#poll-end').datetimepicker({\r\n            format: 'MMM D, YYYY h:mm a'\r\n          })\r\n\r\n          vm.poll.start  = ''\r\n          vm.poll.end    = ''\r\n\r\n        } else {\r\n          $('#poll-start').datetimepicker({\r\n            format:       'MMM D, YYYY h:mm a',\r\n            defaultDate:  moment(data.start, 'YYYY-MM-DD HH:mm:ss')\r\n          })\r\n\r\n          $('#poll-end').datetimepicker({\r\n            format:       'MMM D, YYYY h:mm a',\r\n            defaultDate:  moment(data.end, 'YYYY-MM-DD HH:mm:ss')\r\n          })\r\n\r\n          vm.poll.start  = moment(data.start, 'YYYY-MM-DD HH:mm:ss').format('MMM D, YYYY h:mm a')\r\n          vm.poll.end    = moment(data.end, 'YYYY-MM-DD HH:mm:ss').format('MMM D, YYYY h:mm a')\r\n        }\r\n\r\n        // change event on datetime picker\r\n        $(\"#poll-start\").on(\"dp.change\", function (e) {\r\n          vm.poll.start  = e.date.format('MMM D, YYYY h:mm a')\r\n        })\r\n\r\n        $(\"#poll-end\").on(\"dp.change\", function (e) {\r\n          vm.poll.end    = e.date.format('MMM D, YYYY h:mm a')\r\n        })\r\n\r\n      } else if (selector == '#suggestion-modal') {\r\n        vm.suggestion.id       =  id\r\n        vm.suggestion.title    =  data.title    == undefined ? '' : data.title\r\n        vm.suggestion.direct   =  data.direct   == undefined ? '' : data.direct\r\n        vm.suggestion.message  =  data.message  == undefined ? '' : data.message\r\n\r\n      } else if (selector == '#confirm-post-modal') {\r\n        vm.post.id = id\r\n\r\n      } else if (selector == '#confirm-poll-modal') {\r\n        vm.poll.id = id\r\n\r\n      } else if (selector == '#confirm-suggestion-modal') {\r\n        vm.suggestion.id = id\r\n\r\n      }\r\n\r\n      $(selector).modal('show')\r\n\r\n    }, // showModal\r\n\r\n    hideModal: function hideModal(selector) {\r\n\r\n      var vm = this\r\n\r\n      $(selector).modal('hide')\r\n\r\n      $(selector).on('hidden.bs.modal', function () {\r\n        vm.clearPost()\r\n        vm.clearPoll()\r\n        vm.clearSuggestion()\r\n        vm.disableFieldset()\r\n        vm.action = ''\r\n\r\n      })\r\n\r\n    }, // hideModal\r\n\r\n    switchActivity: function switchActivity(activity) {\r\n      this.active = activity\r\n\r\n      this.clearPost()\r\n      this.clearPosts()\r\n      this.clearPoll()\r\n      this.clearPolls()\r\n      this.clearSuggestion()\r\n      this.clearSuggestions()\r\n\r\n      if (this.active == 'post') {\r\n        this.getAct()\r\n\r\n      } else if (this.active == 'poll') {\r\n        this.getAct()\r\n\r\n      } else if (this.active == 'suggestion') {\r\n        this.getAct()\r\n\r\n      }\r\n\r\n    }, // switchActivity\r\n\r\n    clearPost: function clearPost() {\r\n\r\n      this.post.id                            = null\r\n      this.post.title                         = ''\r\n      this.post.desc                          = ''\r\n      \r\n      this.post.errors.title.dirty            = false\r\n      this.post.errors.title.status           = false\r\n      this.post.errors.title.text             = ''\r\n\r\n      this.post.errors.desc.dirty             = false\r\n      this.post.errors.desc.status            = false\r\n      this.post.errors.desc.text              = ''\r\n\r\n    }, // clearPost\r\n\r\n    clearPosts: function clearPosts() {\r\n\r\n      this.skip                               = 0\r\n      this.take                               = 5\r\n      this.full                               = false\r\n      this.posts                              = []\r\n\r\n    }, // clearPosts\r\n\r\n    clearPoll: function clearPoll() {\r\n\r\n      this.poll.id                            = null\r\n      this.poll.title                         = ''\r\n      this.poll.desc                          = ''\r\n      this.poll.start                         = ''\r\n      this.poll.end                           = ''\r\n      this.poll.type                          = ''\r\n      this.poll.status                        = ''\r\n      this.poll.answer                        = ''\r\n      this.poll.answers                       = []\r\n\r\n      this.poll.errors.title.dirty            = false\r\n      this.poll.errors.title.status           = false\r\n      this.poll.errors.title.text             = ''\r\n\r\n      this.poll.errors.desc.dirty             = false\r\n      this.poll.errors.desc.status            = false\r\n      this.poll.errors.desc.text              = ''\r\n\r\n      this.poll.errors.start.dirty            = false\r\n      this.poll.errors.start.status           = false\r\n      this.poll.errors.start.text             = ''\r\n\r\n      this.poll.errors.end.dirty              = false\r\n      this.poll.errors.end.status             = false\r\n      this.poll.errors.end.text               = ''\r\n\r\n      this.poll.errors.type.dirty             = false\r\n      this.poll.errors.type.status            = false\r\n      this.poll.errors.type.text              = ''\r\n\r\n      this.poll.errors.answer.dirty           = false\r\n      this.poll.errors.answer.status          = false\r\n      this.poll.errors.answer.text            = ''\r\n\r\n    }, // clearPoll\r\n\r\n    clearPolls: function clearPolls() {\r\n\r\n      this.skip                               = 0\r\n      this.take                               = 5\r\n      this.full                               = false\r\n      this.polls                              = []\r\n\r\n    }, // clearPolls\r\n\r\n    clearSuggestion: function clearSuggestion() {\r\n\r\n      this.suggestion.id                      = null\r\n      this.suggestion.title                   = ''\r\n      this.suggestion.direct                  = ''\r\n      this.suggestion.message                 = ''\r\n\r\n      this.suggestion.errors.title.dirty      = false\r\n      this.suggestion.errors.title.status     = false\r\n      this.suggestion.errors.title.text       = ''\r\n\r\n      this.suggestion.errors.direct.dirty     = false\r\n      this.suggestion.errors.direct.status    = false\r\n      this.suggestion.errors.direct.text      = ''\r\n\r\n      this.suggestion.errors.message.dirty    = false\r\n      this.suggestion.errors.message.status   = false\r\n      this.suggestion.errors.message.text     = ''\r\n\r\n    }, // clearSuggestion\r\n\r\n    clearSuggestions: function clearSuggestions() {\r\n\r\n      this.skip                               = 0\r\n      this.take                               = 5\r\n      this.full                               = false\r\n      this.suggestions                        = []\r\n\r\n    }, // clearSuggestions\r\n\r\n    getAct: function getAct() {\n      var this$1 = this;\n\r\n\r\n      this.loadmore = true\r\n\r\n      this.$http\r\n        .get(window.location.origin + '/api/' + this.active + '?skip=' + this.skip + '&take=' + this.take)\r\n\r\n        .then(function (response) {\r\n          if (response.data.length == 0 || response.data.length < 5) this$1.full = true\r\n\r\n          this$1.skip += 5\r\n\r\n          if      (this$1.active == 'post')         for (var i = 0; i <= response.data.length - 1; i++)     this$1.posts.push(response.data[i])\r\n          else if (this$1.active == 'poll')         for (var i = 0; i <= response.data.length - 1; i++)     this$1.polls.push(response.data[i])\r\n          else if (this$1.active == 'suggestion')   for (var i = 0; i <= response.data.length - 1; i++)     this$1.suggestions.push(response.data[i])\r\n\r\n          this$1.loadmore = false\r\n\r\n        })\r\n\r\n        .catch(function (response) {\r\n          console.error(response.error)\r\n\r\n          this$1.loadmore = false\r\n\r\n        })\r\n\r\n    }, // getAct\r\n\r\n    storeAct: function storeAct(data) {\n      var this$1 = this;\n\r\n\r\n      this.$http\r\n        .post(window.location.origin + '/api/' + this.active, data)\r\n\r\n        .then(function (response) {\r\n\r\n          this$1.skip++\r\n\r\n          if (this$1.active == 'post') {\r\n            this$1.hideModal('#post-modal')\r\n            this$1.posts.splice(0, 0, response.data)\r\n\r\n          } else if (this$1.active == 'poll') {\r\n            this$1.hideModal('#poll-modal')\r\n            this$1.polls.splice(0, 0, response.data)\r\n\r\n          } else if (this$1.active == 'suggestion') {\r\n            this$1.hideModal('#suggestion-modal')\r\n            this$1.suggestions.splice(0, 0, response.data)\r\n\r\n          }\r\n\r\n        })\r\n\r\n        .catch(function (response) {\r\n          console.error(response.error)\r\n\r\n        })\r\n\r\n    }, // storeAct\r\n\r\n    edit: function edit(id) {\n      var this$1 = this;\n\r\n\r\n      this.$http\r\n        .get(window.location.origin + '/api/' + this.active + '/' + id + '/edit')\r\n\r\n        .then(function (response) {\r\n\r\n          if (this$1.active == 'post') {\r\n            this$1.showModal('#post-modal', 'Update', response.data.id,\r\n              {\r\n                title:    response.data.title,\r\n                desc:     response.data.desc\r\n              }\r\n            )\r\n\r\n          } else if (this$1.active == 'poll') {\r\n            this$1.showModal('#poll-modal', 'Update', response.data.id,\r\n              {\r\n                title:    response.data.title,\r\n                desc:     response.data.desc,\r\n                start:    response.data.start,\r\n                end:      response.data.end,\r\n                status:   response.data.status,\r\n                type:     response.data.type,\r\n                answers:  response.data.answers\r\n              }\r\n            )\r\n\r\n          } else if (this$1.active == 'suggestion') {\r\n            this$1.showModal('#suggestion-modal', 'Update', response.data.id,\r\n              {\r\n                title:    response.data.title,\r\n                direct:   response.data.direct,\r\n                message:  response.data.message\r\n              }\r\n            )\r\n\r\n          }\r\n\r\n        })\r\n\r\n        .catch(function (response) {\r\n          console.error(response.error)\r\n\r\n        })\r\n\r\n    }, // edit\r\n\r\n    updateAct: function updateAct(id, data) {\n      var this$1 = this;\n\r\n\r\n      this.$http\r\n        .put(window.location.origin + '/api/' + this.active + '/' + id, data)\r\n\r\n        .then(function (response) {\r\n          if (this$1.active == 'post') {\r\n            this$1.hideModal('#post-modal')\r\n\r\n            var i = _.indexOf(this$1.posts, _.find(this$1.posts, {id: response.data.id}))\r\n\r\n            this$1.posts.splice(i, 1, response.data)\r\n\r\n          } else if (this$1.active == 'poll') {\r\n            this$1.hideModal('#poll-modal')\r\n\r\n            var i = _.indexOf(this$1.polls, _.find(this$1.polls, {id: response.data.id}))\r\n\r\n            this$1.polls.splice(i, 1, response.data)\r\n\r\n          } else if (this$1.active == 'suggestion') {\r\n            this$1.hideModal('#suggestion-modal')\r\n\r\n            var i = _.indexOf(this$1.suggestions, _.find(this$1.suggestions, {id: response.data.id}))\r\n\r\n            this$1.suggestions.splice(i, 1, response.data)\r\n\r\n          }\r\n\r\n        })\r\n\r\n        .catch(function (response) {\r\n          console.error(response.error)\r\n        })\r\n\r\n    }, // updateAct\r\n\r\n    destroy: function destroy() {\n      var this$1 = this;\n\r\n\r\n      if      (this.active == 'post')         var id = this.post.id\r\n      else if (this.active == 'poll')         var id = this.poll.id\r\n      else if (this.active == 'suggestion')   var id = this.suggestion.id\r\n\r\n      this.$http\r\n        .delete(window.location.origin + '/api/' + this.active + '/' + id)\r\n\r\n        .then(function (response) {\r\n          this$1.skip--\r\n\r\n          if (this$1.active == 'post') {\r\n            var i = _.indexOf(this$1.posts, _.find(this$1.posts, {id: response.data.id}))\r\n\r\n            this$1.posts.splice(i, 1)\r\n\r\n          } else if (this$1.active == 'poll') {\r\n            var i = _.indexOf(this$1.polls, _.find(this$1.polls, {id: response.data.id}))\r\n\r\n            this$1.polls.splice(i, 1)\r\n\r\n          } else if (this$1.active == 'suggestion') {\r\n            var i = _.indexOf(this$1.suggestions, _.find(this$1.suggestions, {id: response.data.id}))\r\n\r\n            this$1.suggestions.splice(i, 1)\r\n\r\n          }\r\n\r\n          this$1.hideModal('#confirm-' + this$1.active + '-modal')\r\n\r\n        })\r\n        .catch(function (response) {\r\n          console.error(response.error)\r\n\r\n        })\r\n\r\n    }, // destroy\r\n\r\n    submitAct: function submitAct() {\r\n\r\n      this.disableFieldset()\r\n\r\n      if (this.active == 'post') {\r\n        var id = this.post.id\r\n\r\n        var data    = {\r\n          title:    this.post.title,\r\n          desc:     this.post.desc\r\n        }\r\n\r\n      } else if (this.active == 'poll') {\r\n        var id = this.poll.id\r\n\r\n        var data    = {\r\n          title:    this.poll.title,\r\n          desc:     this.poll.desc,\r\n          start:    this.poll.start,\r\n          end:      this.poll.end,\r\n          // status:   this.poll.status,\r\n          type:     this.poll.type,\r\n          answers:  this.poll.answers\r\n        }\r\n\r\n      } else if (this.active == 'suggestion') {\r\n        var id = this.suggestion.id\r\n\r\n        var data    = {\r\n          title:    this.suggestion.title,\r\n          direct:   this.suggestion.direct,\r\n          message:  this.suggestion.message\r\n        }\r\n\r\n      }\r\n\r\n      if (this.action == 'Update')  this.updateAct(id, data)\r\n      else                          this.storeAct(data)\r\n\r\n    },\r\n\r\n    addAnswer: function addAnswer(answer) {\r\n\r\n      if (answer == '') return\r\n\r\n      if (typeof(answer) == 'object') {\r\n        this.poll.answers.push(answer)\r\n        this.poll.answer = ''\r\n\r\n      } else {\r\n        this.poll.answers.push({id: null, answer: answer})\r\n        this.poll.answer = ''\r\n\r\n      }\r\n\r\n    }, // addAnswer\r\n\r\n    removeAnswer: function removeAnswer(key) {\r\n\r\n      this.poll.answers.splice(key, 1)\r\n\r\n    } // removeAnswer\r\n\r\n  } //methods\r\n\r\n})\r\n\r\n__webpack_require__(0)//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);